{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T04:28:52.766Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T04:28:52.789Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:01:04.632Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:01:04.659Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:03:08.836Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:03:08.861Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:26:02.268Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:26:02.292Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:31:07.323Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:31:07.351Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:35:01.253Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:35:01.278Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:36:37.706Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:36:37.731Z"}
{"message":"Cannot read property '_id' of undefined","stack":"TypeError: Cannot read property '_id' of undefined\n    at D:\\Practice\\Module\\backend\\Controllers\\LoginController.js:10:26\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:10:9)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)","level":"error","timestamp":"2020-01-02T05:36:49.293Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:37:32.179Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:37:32.201Z"}
{"message":"Cannot read property '_id' of undefined","stack":"TypeError: Cannot read property '_id' of undefined\n    at D:\\Practice\\Module\\backend\\Controllers\\LoginController.js:11:56\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:10:9)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)","level":"error","timestamp":"2020-01-02T05:37:45.238Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:39:37.354Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:39:37.378Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:44:13.499Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:44:13.526Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:44:55.298Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:44:55.325Z"}
{"message":"could not get login deatils...","stack":"Error: could not get login deatils...\n    at D:\\Practice\\Module\\backend\\Controllers\\LoginController.js:9:12\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:11:9)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)","level":"error","timestamp":"2020-01-02T05:45:06.670Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:46:06.271Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:46:06.295Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T07:11:47.066Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T07:11:47.093Z"}
{"message":"could not get login deatils...","stack":"Error: could not get login deatils...\n    at D:\\Practice\\Module\\backend\\Controllers\\LoginController.js:9:12\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:11:9)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)","level":"error","timestamp":"2020-01-02T07:11:51.908Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T07:25:15.752Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T07:25:15.780Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T07:31:16.429Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T07:31:16.456Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T07:34:25.903Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T07:34:25.927Z"}
{"message":"resizeBy is not defined","stack":"ReferenceError: resizeBy is not defined\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:6:16)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:284:7","level":"error","timestamp":"2020-01-02T08:58:13.944Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T08:59:12.257Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T08:59:12.284Z"}
{"message":"resizeBy is not defined","stack":"ReferenceError: resizeBy is not defined\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:6:16)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:284:7","level":"error","timestamp":"2020-01-02T08:59:40.901Z"}
{"message":"resizeBy is not defined","stack":"ReferenceError: resizeBy is not defined\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:6:16)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:284:7","level":"error","timestamp":"2020-01-02T08:59:50.325Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:04:53.070Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:04:53.093Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:05:33.895Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:05:33.920Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:07:39.068Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:07:39.092Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:08:58.941Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:08:58.965Z"}
{"message":"Cast to ObjectId failed for value \"5e0c24d69725619f6c5cb6e\" at path \"_id\" for model \"user_register\"","stringValue":"\"5e0c24d69725619f6c5cb6e\"","kind":"ObjectId","value":"5e0c24d69725619f6c5cb6e","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"5e0c24d69725619f6c5cb6e\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Query.cast (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at model.Query.Query._castConditions (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\query.js:1876:10)\n    at model.Query.<anonymous> (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\query.js:3212:8)\n    at model.Query._wrappedThunk [as _findOneAndDelete] (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Module\\backend\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-02T09:09:25.182Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:17:31.718Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:17:31.745Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:35:47.792Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:35:47.818Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:47:57.487Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:47:57.511Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T03:36:35.453Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T03:36:35.480Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T03:38:10.183Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T03:38:10.210Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T03:52:34.039Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T03:52:34.062Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T03:54:06.766Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T03:54:06.790Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T03:54:50.752Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T03:54:50.775Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T03:55:21.393Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T03:55:21.416Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T03:55:41.672Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T03:55:41.696Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T04:38:39.288Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T04:38:39.310Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T05:18:30.667Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T05:18:30.691Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T05:21:05.597Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T05:21:05.621Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Module\\BackEnd\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Module\\BackEnd\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Module\\BackEnd\\Controllers\\registrations.js:18:31\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-04T05:21:23.509Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Module\\BackEnd\\node_modules\\express\\lib\\response.js:771:10)\n    at D:\\Practice\\Module\\BackEnd\\Controllers\\registrations.js:25:9","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-04T05:22:05.794Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Module\\BackEnd\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Module\\BackEnd\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Module\\BackEnd\\Controllers\\registrations.js:18:31\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-04T05:27:38.294Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T05:28:17.923Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T05:28:17.948Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Module\\BackEnd\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Module\\BackEnd\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Module\\BackEnd\\Controllers\\registrations.js:18:31\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-04T05:28:22.946Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T05:30:22.152Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T05:30:22.176Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Module\\BackEnd\\node_modules\\express\\lib\\response.js:771:10)\n    at D:\\Practice\\Module\\BackEnd\\Controllers\\registrations.js:25:9","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-04T05:30:29.406Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-04T05:35:13.973Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-04T05:35:14.000Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-05T07:44:53.931Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-05T07:45:10.175Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-05T09:44:58.371Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-05T09:44:58.445Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-05T11:50:49.202Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-05T11:50:49.264Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-05T12:18:20.525Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-05T12:18:20.598Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-06T06:57:49.593Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-06T06:57:49.615Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-06T07:07:18.845Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-06T07:07:18.867Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-08T03:28:25.245Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-08T03:28:25.274Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-08T04:00:31.210Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-08T04:00:31.235Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-08T04:19:24.847Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-08T04:19:24.873Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-08T04:20:29.681Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-08T04:20:29.704Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-08T06:37:09.673Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-08T06:37:09.701Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-08T07:06:06.653Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-08T07:06:06.681Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-08T07:07:15.433Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-08T07:07:15.458Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T04:51:07.291Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T04:51:07.320Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\userInformationContoller.js:21:31\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-09T05:01:36.743Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\userInformationContoller.js:21:31\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-09T05:01:40.374Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:05:52.015Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:05:52.049Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:39:32\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-09T09:06:31.174Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:07:06.111Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:07:06.669Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:39:32\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-09T09:07:08.522Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:07:47.376Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:07:47.406Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:41:32\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-09T09:07:49.567Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:41:32\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-09T09:08:15.993Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:485:11)\n    at ServerResponse.header (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:771:10)\n    at ServerResponse.send (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\response.js:170:12)\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:41:32\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","code":"ERR_HTTP_HEADERS_SENT","level":"error","timestamp":"2020-01-09T09:08:46.148Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:08:52.014Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:08:52.044Z"}
{"message":"Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"","stringValue":"\"{ email: 'manjuhubballi02@gmail.com' }\"","kind":"ObjectId","value":{"email":"manjuhubballi02@gmail.com"},"path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\cast.js:260:34)\n    at model.Query.Query.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at castQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Query._findAndModify (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-09T09:08:54.766Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:09:12.551Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:09:12.576Z"}
{"message":"Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"","stringValue":"\"{ email: 'manjuhubballi02@gmail.com' }\"","kind":"ObjectId","value":{"email":"manjuhubballi02@gmail.com"},"path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\cast.js:260:34)\n    at model.Query.Query.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at castQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Query._findAndModify (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-09T09:09:15.073Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:10:03.967Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:10:03.993Z"}
{"message":"Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"","stringValue":"\"{ email: 'manjuhubballi02@gmail.com' }\"","kind":"ObjectId","value":{"email":"manjuhubballi02@gmail.com"},"path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\cast.js:260:34)\n    at model.Query.Query.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at castQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Query._findAndModify (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-09T09:10:06.457Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:10:31.735Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:10:31.762Z"}
{"message":"email is not defined","stack":"ReferenceError: email is not defined\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:35:33\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-01-09T09:10:33.627Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:11:20.179Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:11:20.208Z"}
{"message":"id is not defined","stack":"ReferenceError: id is not defined\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:35:33\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-01-09T09:11:23.384Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:12:35.647Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:12:35.673Z"}
{"message":"id is not defined","stack":"ReferenceError: id is not defined\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:35:33\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Project\\NEW-Project\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Project\\NEW-Project\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-01-09T09:12:38.299Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:13:06.576Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:13:06.601Z"}
{"message":"Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"","stringValue":"\"{ email: 'manjuhubballi02@gmail.com' }\"","kind":"ObjectId","value":{"email":"manjuhubballi02@gmail.com"},"path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\cast.js:260:34)\n    at model.Query.Query.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at castQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Query._findAndModify (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-09T09:13:08.735Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:14:00.558Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:14:00.584Z"}
{"message":"Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"","stringValue":"\"{ email: 'manjuhubballi02@gmail.com' }\"","kind":"ObjectId","value":{"email":"manjuhubballi02@gmail.com"},"path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\cast.js:260:34)\n    at model.Query.Query.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at castQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Query._findAndModify (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-09T09:14:02.576Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:14:39.812Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:14:39.838Z"}
{"message":"Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"","stringValue":"\"{ email: 'manjuhubballi02@gmail.com' }\"","kind":"ObjectId","value":{"email":"manjuhubballi02@gmail.com"},"path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{ email: 'manjuhubballi02@gmail.com' }\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\cast.js:260:34)\n    at model.Query.Query.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at castQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Query._findAndModify (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-09T09:14:41.680Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:17:50.074Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:17:50.103Z"}
{"message":"Cast to ObjectId failed for value \"{ email: undefined }\" at path \"_id\" for model \"user_register\"","stringValue":"\"{ email: undefined }\"","kind":"ObjectId","value":{},"path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{ email: undefined }\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\cast.js:260:34)\n    at model.Query.Query.cast (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at castQuery (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Query._findAndModify (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (D:\\Practice\\Project\\NEW-Project\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-09T09:17:52.200Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:18:54.188Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:18:54.213Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:20:19.582Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:20:19.608Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:22:36.065Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:22:36.089Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:24:30.154Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:24:30.181Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:25:43.139Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:25:43.169Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:26:13.894Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:26:13.921Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:31:25.621Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:31:25.655Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:31:57.560Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:31:57.591Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:32:10.328Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:32:10.359Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-09T09:33:58.709Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-09T09:33:58.738Z"}
{"message":"Illegal arguments: undefined, string","stack":"Error: Illegal arguments: undefined, string\n    at _async (D:\\Practice\\Project\\NEW-Project\\node_modules\\bcryptjs\\dist\\bcrypt.js:214:46)\n    at D:\\Practice\\Project\\NEW-Project\\node_modules\\bcryptjs\\dist\\bcrypt.js:223:17\n    at new Promise (<anonymous>)\n    at Object.bcrypt.hash (D:\\Practice\\Project\\NEW-Project\\node_modules\\bcryptjs\\dist\\bcrypt.js:222:20)\n    at D:\\Practice\\Project\\NEW-Project\\Controllers\\registrations.js:40:33","level":"error","timestamp":"2020-01-09T10:02:56.417Z"}
