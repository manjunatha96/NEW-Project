{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T04:28:52.766Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T04:28:52.789Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:01:04.632Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:01:04.659Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:03:08.836Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:03:08.861Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:26:02.268Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:26:02.292Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:31:07.323Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:31:07.351Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:35:01.253Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:35:01.278Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:36:37.706Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:36:37.731Z"}
{"message":"Cannot read property '_id' of undefined","stack":"TypeError: Cannot read property '_id' of undefined\n    at D:\\Practice\\Module\\backend\\Controllers\\LoginController.js:10:26\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:10:9)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)","level":"error","timestamp":"2020-01-02T05:36:49.293Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:37:32.179Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:37:32.201Z"}
{"message":"Cannot read property '_id' of undefined","stack":"TypeError: Cannot read property '_id' of undefined\n    at D:\\Practice\\Module\\backend\\Controllers\\LoginController.js:11:56\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:10:9)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)","level":"error","timestamp":"2020-01-02T05:37:45.238Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:39:37.354Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:39:37.378Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:44:13.499Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:44:13.526Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:44:55.298Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:44:55.325Z"}
{"message":"could not get login deatils...","stack":"Error: could not get login deatils...\n    at D:\\Practice\\Module\\backend\\Controllers\\LoginController.js:9:12\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:11:9)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)","level":"error","timestamp":"2020-01-02T05:45:06.670Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T05:46:06.271Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T05:46:06.295Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T07:11:47.066Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T07:11:47.093Z"}
{"message":"could not get login deatils...","stack":"Error: could not get login deatils...\n    at D:\\Practice\\Module\\backend\\Controllers\\LoginController.js:9:12\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:11:9)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)","level":"error","timestamp":"2020-01-02T07:11:51.908Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T07:25:15.752Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T07:25:15.780Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T07:31:16.429Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T07:31:16.456Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T07:34:25.903Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T07:34:25.927Z"}
{"message":"resizeBy is not defined","stack":"ReferenceError: resizeBy is not defined\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:6:16)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:284:7","level":"error","timestamp":"2020-01-02T08:58:13.944Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T08:59:12.257Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T08:59:12.284Z"}
{"message":"resizeBy is not defined","stack":"ReferenceError: resizeBy is not defined\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:6:16)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:284:7","level":"error","timestamp":"2020-01-02T08:59:40.901Z"}
{"message":"resizeBy is not defined","stack":"ReferenceError: resizeBy is not defined\n    at module.exports (D:\\Practice\\Module\\backend\\Middleware\\logins.js:6:16)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (D:\\Practice\\Module\\backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Practice\\Module\\backend\\node_modules\\express\\lib\\router\\index.js:284:7","level":"error","timestamp":"2020-01-02T08:59:50.325Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:04:53.070Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:04:53.093Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:05:33.895Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:05:33.920Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:07:39.068Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:07:39.092Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:08:58.941Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:08:58.965Z"}
{"message":"Cast to ObjectId failed for value \"5e0c24d69725619f6c5cb6e\" at path \"_id\" for model \"user_register\"","stringValue":"\"5e0c24d69725619f6c5cb6e\"","kind":"ObjectId","value":"5e0c24d69725619f6c5cb6e","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"5e0c24d69725619f6c5cb6e\" at path \"_id\" for model \"user_register\"\n    at new CastError (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.cast (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.SchemaType.applySetters (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.SchemaType._castForQuery (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.SchemaType.castForQuery (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.SchemaType.castForQueryWrapper (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Query.cast (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\query.js:4698:12)\n    at model.Query.Query._castConditions (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\query.js:1876:10)\n    at model.Query.<anonymous> (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\query.js:3212:8)\n    at model.Query._wrappedThunk [as _findOneAndDelete] (D:\\Practice\\Module\\backend\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at D:\\Practice\\Module\\backend\\node_modules\\kareem\\index.js:369:33\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","name":"CastError","level":"error","timestamp":"2020-01-02T09:09:25.182Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:17:31.718Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:17:31.745Z"}
{"level":"info","message":"Server is connected to 1234","timestamp":"2020-01-02T09:35:47.792Z"}
{"level":"info","message":"Database connected successfully..","timestamp":"2020-01-02T09:35:47.818Z"}
